#!/usr/bin/python

# Copyright 2009 Canonical Ltd.

# This file is part of launchpadlib.
#
# launchpadlib is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by the
# Free Software Foundation, version 3 of the License.
#
# launchpadlib is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
# for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with launchpadlib. If not, see <http://www.gnu.org/licenses/>.

"""A script to retrieve a Launchpad request token.

This script will create a Launchpad request token and print to STDOUT
some JSON data about the token and the available access levels.
"""

__metaclass__ = type

from optparse import OptionParser
from launchpadlib.apps import RequestTokenApp

parser = OptionParser()
parser.usage = "%prog CONSUMER_NAME [-r SITE NAME] [-c CONTEXT]"
parser.add_option("-s", "--site", dest="web_root",
                  help=("The name of the Launchpad site to ask for a request "
                        "token (default: %default). This can also be the "
                        "URL to the root of the site."),
                  metavar="SITE", default="staging")
parser.add_option("-c", "--context", dest="context",
                  help="Restrict the token to a specific context "
                  "(example: firefox)", metavar="CONTEXT", default="")

if __name__ == '__main__':
    (options, args) = parser.parse_args()
    if len(args) < 1:
        parser.error("No consumer name supplied")
    consumer_name = args[0]
    app = RequestTokenApp(
        options.web_root, consumer_name, options.context)
    print app.run()
